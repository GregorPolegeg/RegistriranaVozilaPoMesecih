// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Acceleration {
  id        Int      @id @default(autoincrement())
  vehicleId Int
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])
  startTime DateTime @default(now())
  endTime   DateTime @default(now())
  distance  Float

  @@index([vehicleId])
}

model Trip {
  id        Int        @id @default(autoincrement())
  vehicleId Int
  vehicle   Vehicle    @relation(fields: [vehicleId], references: [id])
  startTime DateTime   @default(now())
  endTime   DateTime   @default(now())
  distance  Float
  locations Location[]

  @@index([vehicleId])
}

model Location {
  id      Int      @id @default(autoincrement())
  tripId  Int
  trip    Trip     @relation(fields: [tripId], references: [id])
  lat     Float
  lng     Float
  timestamp DateTime @default(now())

  @@index([tripId])
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  firstName String
  lastName  String
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  videoUrl  String?   // Add this line
  imageUrl  String?   // Add this line
  vehicles  Vehicle[]
}


model Vehicle {
  id              Int             @id @default(autoincrement())
  userId          Int?
  user            User?           @relation(fields: [userId], references: [id])
  firstRegDate    DateTime
  firstRegDateSlo DateTime
  brand           String
  model String
  vin             String
  maxSpeed        Float
  fuelType    String
  kilometers Float
  status          String
  userAge         Int
  userLegalStatus String
  userIsOwner     String
  userCity        String
  userMunicipality String
  ownerAge      Int
  ownerLegalStatus String
  vehicleCategory String
  envLabel String
  originCountry String
  weight Float
  nominalPower Float
  engineDisplacement Float
  nominalEngineSpeed Float
  color String
  bodyType String
  locationLng     Float?
  locationLat     Float?
  accelerations   Acceleration[]
  trips           Trip[]

  @@unique([vin])
  @@index([userId])
  @@index([vin])
}
