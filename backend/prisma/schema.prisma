// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Accelerations {
  id        Int      @id @default(autoincrement())
  vehicleId Int
  vehicle   Vehicles  @relation(fields: [vehicleId], references: [id])
  startTime DateTime @default(now())
  endTime   DateTime @default(now())
  distance  Float

  @@index([vehicleId])
}

model Trips {
  id        Int      @id @default(autoincrement())
  vehicleId Int
  vehicle   Vehicles  @relation(fields: [vehicleId], references: [id])
  startTime DateTime @default(now())
  endTime   DateTime @default(now())
  distance  Float

  @@index([vehicleId])
}

model Users {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  firstName String
  lastName  String
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  vehicles  Vehicles[]
}

model Vehicles {
  id              Int             @id @default(autoincrement())
  userId          Int?
  user            Users?           @relation(fields: [userId], references: [id])
  firstRegDate    DateTime
  firstRegDateSlo DateTime
  brand           String
  vin             String
  maxSpeed        Float
  fuelTypeDesc    String
  kilometersMiles Float
  locationLng     Float?
  locationLat     Float?
  accelerations   Accelerations[]
  trips           Trips[]

  @@unique([vin])
  @@index([userId])
  @@index([vin])
}
