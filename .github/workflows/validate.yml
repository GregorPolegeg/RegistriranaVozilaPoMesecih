name: Build Backend2

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  setup-environment:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install backend dependencies
        run: |
          cd backend
          touch error_log.txt
          npm install > install_log.txt 2>&1 || echo "Error during npm install" >> error_log.txt
          npm audit --production >> install_log.txt 2>&1 || echo "Error during npm audit" >> error_log.txt

      - name: Install frontend dependencies
        run: |
          cd frontend
          touch error_log.txt
          npm install > install_log.txt 2>&1 || echo "Error during npm install" >> error_log.txt
          npm install --global expo-cli >> install_log.txt 2>&1 || echo "Error during expo-cli install" >> error_log.txt
          npm audit --production >> install_log.txt 2>&1 || echo "Error during npm audit" >> error_log.txt

      - name: Upload error log
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: errors
          path: |
            backend/error_log.txt
            frontend/error_log.txt
          if-no-files-found: ignore

  run-tests:
    runs-on: self-hosted
    needs: setup-environment

    steps:
      - uses: actions/checkout@v3

      - name: Download error log
        uses: actions/download-artifact@v3
        with:
          name: errors

      - name: Check for errors
        run: |
          if [ -s backend/error_log.txt ] || [ -s frontend/error_log.txt ]; then
            echo "Environment not set up correctly"
            cat backend/error_log.txt || true
            cat frontend/error_log.txt || true
            exit 1
          else
            echo "Environment setup correctly"
          fi

      - name: Run backend tests
        run: |
          cd backend
          npm test

      - name: Run frontend tests
        run: |
          cd frontend
          npm test

      - name: Start backend server
        run: |
          cd backend
          nohup npm start & # Use nohup to keep the server running in the background
          sleep 10 # Increase sleep to give the server time to start
          curl -I http://localhost:3001 # Test backend server health

      - name: Start frontend server
        run: |
          cd frontend
          nohup expo start --no-interactive &
          sleep 10 # Increase sleep to give the server time to start
          curl -I http://localhost:8081 # Test frontend server health
